From 859d1c2cdc2da087d9c26de6bdc6366bdd884fff Mon Sep 17 00:00:00 2001
From: Daniel Micay <danielmicay@gmail.com>
Date: Mon, 17 Jun 2019 11:29:21 -0400
Subject: [PATCH 34/38] stub out the battery status API

Pretend that the device is always plugged in and fully charged.
---
 .../modules/battery/battery_manager.cc        | 25 +++----------------
 1 file changed, 4 insertions(+), 21 deletions(-)

diff --git a/third_party/blink/renderer/modules/battery/battery_manager.cc b/third_party/blink/renderer/modules/battery/battery_manager.cc
index 25c3e426682c..34b21b674c1a 100644
--- a/third_party/blink/renderer/modules/battery/battery_manager.cc
+++ b/third_party/blink/renderer/modules/battery/battery_manager.cc
@@ -44,45 +44,28 @@ ScriptPromise BatteryManager::StartRequest(ScriptState* script_state) {
 }
 
 bool BatteryManager::charging() {
-  return battery_status_.Charging();
+  return true;
 }
 
 double BatteryManager::chargingTime() {
-  return battery_status_.charging_time();
+  return 0.0;
 }
 
 double BatteryManager::dischargingTime() {
-  return battery_status_.discharging_time();
+  return std::numeric_limits<double>::infinity();
 }
 
 double BatteryManager::level() {
-  return battery_status_.Level();
+  return 1.0;
 }
 
 void BatteryManager::DidUpdateData() {
   DCHECK(battery_property_);
 
-  BatteryStatus old_status = battery_status_;
-  battery_status_ = *BatteryDispatcher::Instance().LatestData();
-
   if (battery_property_->GetState() == ScriptPromisePropertyBase::kPending) {
     battery_property_->Resolve(this);
     return;
   }
-
-  Document* document = To<Document>(GetExecutionContext());
-  DCHECK(document);
-  if (document->IsContextPaused() || document->IsContextDestroyed())
-    return;
-
-  if (battery_status_.Charging() != old_status.Charging())
-    DispatchEvent(*Event::Create(event_type_names::kChargingchange));
-  if (battery_status_.charging_time() != old_status.charging_time())
-    DispatchEvent(*Event::Create(event_type_names::kChargingtimechange));
-  if (battery_status_.discharging_time() != old_status.discharging_time())
-    DispatchEvent(*Event::Create(event_type_names::kDischargingtimechange));
-  if (battery_status_.Level() != old_status.Level())
-    DispatchEvent(*Event::Create(event_type_names::kLevelchange));
 }
 
 void BatteryManager::RegisterWithDispatcher() {
-- 
2.22.0

