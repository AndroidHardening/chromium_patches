From 53792e77d36b792fd6128c12a865d80dbc3a0fed Mon Sep 17 00:00:00 2001
From: Daniel Micay <danielmicay@gmail.com>
Date: Sat, 26 Oct 2019 00:16:58 -0400
Subject: [PATCH 48/49] temporarily disable AImageReader support

This works around a CFI failure issue:

https://bugs.chromium.org/p/chromium/issues/detail?id=977583
---
 gpu/config/gpu_finch_features.cc | 2 +-
 gpu/ipc/service/gpu_init.cc      | 8 ++++----
 media/base/media_switches.cc     | 2 +-
 3 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/gpu/config/gpu_finch_features.cc b/gpu/config/gpu_finch_features.cc
index 4fe158b82fbc..830bcda52328 100644
--- a/gpu/config/gpu_finch_features.cc
+++ b/gpu/config/gpu_finch_features.cc
@@ -31,7 +31,7 @@ bool FieldIsInBlacklist(const char* current_value, std::string blacklist_str) {
 #if defined(OS_ANDROID)
 // Use android AImageReader when playing videos with MediaPlayer.
 const base::Feature kAImageReaderMediaPlayer{"AImageReaderMediaPlayer",
-                                             base::FEATURE_ENABLED_BY_DEFAULT};
+                                             base::FEATURE_DISABLED_BY_DEFAULT};
 
 // Use android SurfaceControl API for managing display compositor's buffer queue
 // and using overlays on Android.
diff --git a/gpu/ipc/service/gpu_init.cc b/gpu/ipc/service/gpu_init.cc
index 1aeba67edd48..b8b7d22daed8 100644
--- a/gpu/ipc/service/gpu_init.cc
+++ b/gpu/ipc/service/gpu_init.cc
@@ -491,9 +491,9 @@ bool GpuInit::InitializeAndStartSandbox(base::CommandLine* command_line,
 
 #if defined(OS_ANDROID)
   // Disable AImageReader if the workaround is enabled.
-  if (gpu_feature_info_.IsWorkaroundEnabled(DISABLE_AIMAGEREADER)) {
+  //if (gpu_feature_info_.IsWorkaroundEnabled(DISABLE_AIMAGEREADER)) {
     base::android::AndroidImageReader::DisableSupport();
-  }
+  //}
 #endif
 #if defined(USE_OZONE)
   gpu_feature_info_.supported_buffer_formats_for_allocation_and_texturing =
@@ -522,9 +522,9 @@ void GpuInit::InitializeInProcess(base::CommandLine* command_line,
   default_offscreen_surface_ = gl::init::CreateOffscreenGLSurface(gfx::Size());
 
   // Disable AImageReader if the workaround is enabled.
-  if (gpu_feature_info_.IsWorkaroundEnabled(DISABLE_AIMAGEREADER)) {
+  //if (gpu_feature_info_.IsWorkaroundEnabled(DISABLE_AIMAGEREADER)) {
     base::android::AndroidImageReader::DisableSupport();
-  }
+  //}
 
   UMA_HISTOGRAM_ENUMERATION("GPU.GLImplementation", gl::GetGLImplementation());
 }
diff --git a/media/base/media_switches.cc b/media/base/media_switches.cc
index 5f33919f151f..bdb8c75840a2 100644
--- a/media/base/media_switches.cc
+++ b/media/base/media_switches.cc
@@ -491,7 +491,7 @@ const base::Feature kMediaDrmPreprovisioningAtStartup{
 
 // Enables the Android Image Reader path for Video decoding(for AVDA and MCVD)
 const base::Feature kAImageReaderVideoOutput{"AImageReaderVideoOutput",
-                                             base::FEATURE_ENABLED_BY_DEFAULT};
+                                             base::FEATURE_DISABLED_BY_DEFAULT};
 
 // Prevents using SurfaceLayer for videos. This is meant to be used by embedders
 // that cannot support SurfaceLayer at the moment.
-- 
2.25.0

