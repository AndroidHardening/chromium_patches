From 6c2e6ddbc289753f3c422892d1d550e9a270049a Mon Sep 17 00:00:00 2001
From: Daniel Micay <danielmicay@gmail.com>
Date: Fri, 2 Aug 2019 21:11:17 -0400
Subject: [PATCH 60/75] remove translate offer preference

---
 .../xml/languages_detailed_preferences.xml    |  34 ++---
 .../java/res/xml/languages_preferences.xml    |   8 +-
 .../language/settings/LanguageSettings.java   | 120 +++++++++---------
 .../strings/android_chrome_strings.grd        |  12 +-
 4 files changed, 87 insertions(+), 87 deletions(-)

diff --git a/chrome/android/java/res/xml/languages_detailed_preferences.xml b/chrome/android/java/res/xml/languages_detailed_preferences.xml
index 8eb44c2bc29e..94be2ce5bf1f 100644
--- a/chrome/android/java/res/xml/languages_detailed_preferences.xml
+++ b/chrome/android/java/res/xml/languages_detailed_preferences.xml
@@ -29,22 +29,22 @@
 
     </PreferenceCategory>
 
-    <PreferenceCategory
-        android:key="translation_settings_section"
-        android:order="3"
-        android:title="@string/languages_settings_title"
-        app:initialExpandedChildrenCount="1">
-
-        <org.chromium.components.browser_ui.settings.ChromeSwitchPreference
-            android:key="translate_switch"
-            android:summaryOn="@string/languages_send_translate_switch"
-            android:summaryOff="@string/languages_send_translate_switch" />
-
-        <org.chromium.chrome.browser.language.settings.LanguageItemPickerPreference
-            android:key="translate_settings_target_language"
-            android:title="@string/languages_settings_target"
-            app:allowDividerBelow="false" />
-
-    </PreferenceCategory>
+    <!--<PreferenceCategory-->
+        <!--android:key="translation_settings_section"-->
+        <!--android:order="3"-->
+        <!--android:title="@string/languages_settings_title"-->
+        <!--app:initialExpandedChildrenCount="1">-->
+
+        <!--<org.chromium.components.browser_ui.settings.ChromeSwitchPreference-->
+            <!--android:key="translate_switch"-->
+            <!--android:summaryOn="@string/languages_send_translate_switch"-->
+            <!--android:summaryOff="@string/languages_send_translate_switch" />-->
+
+        <!--<org.chromium.chrome.browser.language.settings.LanguageItemPickerPreference-->
+            <!--android:key="translate_settings_target_language"-->
+            <!--android:title="@string/languages_settings_target"-->
+            <!--app:allowDividerBelow="false" />-->
+
+    <!--</PreferenceCategory>-->
 
 </PreferenceScreen>
diff --git a/chrome/android/java/res/xml/languages_preferences.xml b/chrome/android/java/res/xml/languages_preferences.xml
index e24997252ae3..692c5685e158 100644
--- a/chrome/android/java/res/xml/languages_preferences.xml
+++ b/chrome/android/java/res/xml/languages_preferences.xml
@@ -11,9 +11,9 @@
         android:layout="@layout/languages_preference"
         android:widgetLayout="@layout/accept_languages_list" />
 
-    <org.chromium.components.browser_ui.settings.ChromeSwitchPreference
-        android:key="translate_switch"
-        android:summaryOn="@string/languages_offer_translate_switch"
-        android:summaryOff="@string/languages_offer_translate_switch" />
+    <!--<org.chromium.components.browser_ui.settings.ChromeSwitchPreference-->
+        <!--android:key="translate_switch"-->
+        <!--android:summaryOn="@string/languages_offer_translate_switch"-->
+        <!--android:summaryOff="@string/languages_offer_translate_switch" />-->
 
 </PreferenceScreen>
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/language/settings/LanguageSettings.java b/chrome/android/java/src/org/chromium/chrome/browser/language/settings/LanguageSettings.java
index a4597089b653..872e6cdb0d68 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/language/settings/LanguageSettings.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/language/settings/LanguageSettings.java
@@ -76,26 +76,26 @@ public class LanguageSettings
                 (LanguageListPreference) findPreference(PREFERRED_LANGUAGES_KEY);
         mLanguageListPref.registerActivityLauncher(this);
 
-        ChromeSwitchPreference translateSwitch =
-                (ChromeSwitchPreference) findPreference(TRANSLATE_SWITCH_KEY);
-        boolean isTranslateEnabled = getPrefService().getBoolean(Pref.OFFER_TRANSLATE_ENABLED);
-        translateSwitch.setChecked(isTranslateEnabled);
+        //ChromeSwitchPreference translateSwitch =
+                //(ChromeSwitchPreference) findPreference(TRANSLATE_SWITCH_KEY);
+        //boolean isTranslateEnabled = getPrefService().getBoolean(Pref.OFFER_TRANSLATE_ENABLED);
+        //translateSwitch.setChecked(isTranslateEnabled);
 
-        translateSwitch.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {
-            @Override
-            public boolean onPreferenceChange(Preference preference, Object newValue) {
-                boolean enabled = (boolean) newValue;
-                getPrefService().setBoolean(Pref.OFFER_TRANSLATE_ENABLED, enabled);
-                mLanguageListPref.notifyPrefChanged();
-                LanguagesManager.recordAction(enabled ? LanguagesManager.LanguageSettingsActionType
-                                                                .ENABLE_TRANSLATE_GLOBALLY
-                                                      : LanguagesManager.LanguageSettingsActionType
-                                                                .DISABLE_TRANSLATE_GLOBALLY);
-                return true;
-            }
-        });
-        translateSwitch.setManagedPreferenceDelegate((ChromeManagedPreferenceDelegate) preference
-                -> getPrefService().isManagedPreference(Pref.OFFER_TRANSLATE_ENABLED));
+        //translateSwitch.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {
+            //@Override
+            //public boolean onPreferenceChange(Preference preference, Object newValue) {
+                //boolean enabled = (boolean) newValue;
+                //getPrefService().setBoolean(Pref.OFFER_TRANSLATE_ENABLED, enabled);
+                //mLanguageListPref.notifyPrefChanged();
+                //LanguagesManager.recordAction(enabled ? LanguagesManager.LanguageSettingsActionType
+                                                                //.ENABLE_TRANSLATE_GLOBALLY
+                                                      //: LanguagesManager.LanguageSettingsActionType
+                                                                //.DISABLE_TRANSLATE_GLOBALLY);
+                //return true;
+            //}
+        //});
+        //translateSwitch.setManagedPreferenceDelegate((ChromeManagedPreferenceDelegate) preference
+                //-> getPrefService().isManagedPreference(Pref.OFFER_TRANSLATE_ENABLED));
     }
 
     /**
@@ -111,7 +111,7 @@ public class LanguageSettings
                 (LanguageListPreference) findPreference(CONTENT_LANGUAGES_KEY);
         mLanguageListPref.registerActivityLauncher(this);
 
-        setupTranslateSection(mLanguageListPref);
+        //setupTranslateSection(mLanguageListPref);
     }
 
     /**
@@ -138,50 +138,50 @@ public class LanguageSettings
      * enabled/disabled and will hide all advanced settings when disabled.
      * @param languageListPreference LanguageListPreference reference to update about state changes.
      */
-    private void setupTranslateSection(LanguageListPreference languageListPreference) {
-        ChromeSwitchPreference translateSwitch =
-                (ChromeSwitchPreference) findPreference(TRANSLATE_SWITCH_KEY);
-        boolean isTranslateEnabled = getPrefService().getBoolean(Pref.OFFER_TRANSLATE_ENABLED);
-        translateSwitch.setChecked(isTranslateEnabled);
+    //private void setupTranslateSection(LanguageListPreference languageListPreference) {
+        //ChromeSwitchPreference translateSwitch =
+                //(ChromeSwitchPreference) findPreference(TRANSLATE_SWITCH_KEY);
+        //boolean isTranslateEnabled = getPrefService().getBoolean(Pref.OFFER_TRANSLATE_ENABLED);
+        //translateSwitch.setChecked(isTranslateEnabled);
 
-        PreferenceCategory translationSettingsSection =
-                (PreferenceCategory) findPreference(TRANSLATION_SETTINGS_SECTION);
-        translationSettingsSection.setOnExpandButtonClickListener(
-                new PreferenceGroup.OnExpandButtonClickListener() {
-                    @Override
-                    public void onExpandButtonClick() {
-                        LanguagesManager.recordImpression(LanguagesManager.LanguageSettingsPageType
-                                                                  .ADVANCED_LANGUAGE_SETTINGS);
-                    }
-                });
+        //PreferenceCategory translationSettingsSection =
+                //(PreferenceCategory) findPreference(TRANSLATION_SETTINGS_SECTION);
+        //translationSettingsSection.setOnExpandButtonClickListener(
+                //new PreferenceGroup.OnExpandButtonClickListener() {
+                    //@Override
+                    //public void onExpandButtonClick() {
+                        //LanguagesManager.recordImpression(LanguagesManager.LanguageSettingsPageType
+                                                                  //.ADVANCED_LANGUAGE_SETTINGS);
+                    //}
+                //});
 
-        // Get advanced section preference items
-        LanguageItemPickerPreference targetLanguagePreference =
-                (LanguageItemPickerPreference) findPreference(TARGET_LANGUAGE_KEY);
+        //// Get advanced section preference items
+        //LanguageItemPickerPreference targetLanguagePreference =
+                //(LanguageItemPickerPreference) findPreference(TARGET_LANGUAGE_KEY);
 
-        translateSwitch.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {
-            @Override
-            public boolean onPreferenceChange(Preference preference, Object newValue) {
-                boolean enabled = (boolean) newValue;
-                getPrefService().setBoolean(Pref.OFFER_TRANSLATE_ENABLED, enabled);
-                languageListPreference.notifyPrefChanged();
-                targetLanguagePreference.setVisible(enabled);
-                LanguagesManager.recordAction(enabled ? LanguagesManager.LanguageSettingsActionType
-                                                                .ENABLE_TRANSLATE_GLOBALLY
-                                                      : LanguagesManager.LanguageSettingsActionType
-                                                                .DISABLE_TRANSLATE_GLOBALLY);
-                return true;
-            }
-        });
-        translateSwitch.setManagedPreferenceDelegate((ChromeManagedPreferenceDelegate) preference
-                -> getPrefService().isManagedPreference(Pref.OFFER_TRANSLATE_ENABLED));
+        //translateSwitch.setOnPreferenceChangeListener(new Preference.OnPreferenceChangeListener() {
+            //@Override
+            //public boolean onPreferenceChange(Preference preference, Object newValue) {
+                //boolean enabled = (boolean) newValue;
+                //getPrefService().setBoolean(Pref.OFFER_TRANSLATE_ENABLED, enabled);
+                //languageListPreference.notifyPrefChanged();
+                //targetLanguagePreference.setVisible(enabled);
+                //LanguagesManager.recordAction(enabled ? LanguagesManager.LanguageSettingsActionType
+                                                                //.ENABLE_TRANSLATE_GLOBALLY
+                                                      //: LanguagesManager.LanguageSettingsActionType
+                                                                //.DISABLE_TRANSLATE_GLOBALLY);
+                //return true;
+            //}
+        //});
+        //translateSwitch.setManagedPreferenceDelegate((ChromeManagedPreferenceDelegate) preference
+                //-> getPrefService().isManagedPreference(Pref.OFFER_TRANSLATE_ENABLED));
 
-        targetLanguagePreference.setLanguageItem(TranslateBridge.getTargetLanguage());
-        setSelectLanguageLauncher(targetLanguagePreference,
-                AddLanguageFragment.LANGUAGE_OPTIONS_TRANSLATE_LANGUAGES,
-                REQUEST_CODE_CHANGE_TARGET_LANGUAGE,
-                LanguagesManager.LanguageSettingsPageType.TARGET_LANGUAGE);
-    }
+        //targetLanguagePreference.setLanguageItem(TranslateBridge.getTargetLanguage());
+        //setSelectLanguageLauncher(targetLanguagePreference,
+                //AddLanguageFragment.LANGUAGE_OPTIONS_TRANSLATE_LANGUAGES,
+                //REQUEST_CODE_CHANGE_TARGET_LANGUAGE,
+                //LanguagesManager.LanguageSettingsPageType.TARGET_LANGUAGE);
+    //}
 
     @Override
     public void onDetach() {
diff --git a/chrome/browser/ui/android/strings/android_chrome_strings.grd b/chrome/browser/ui/android/strings/android_chrome_strings.grd
index 7fb0180bd681..7f7bc69b9ed0 100644
--- a/chrome/browser/ui/android/strings/android_chrome_strings.grd
+++ b/chrome/browser/ui/android/strings/android_chrome_strings.grd
@@ -1224,12 +1224,12 @@ Your Google account may have other forms of browsing history like searches and a
       <message name="IDS_LANGUAGES_LIST_DESCRIPTION" desc="Description on the Languages settings screen. Appears above a list of one or more languages that the user selects, to tell Vanadium which languages they prefer to use to read website content.">
         Websites will show text in your preferred language, when possible.
       </message>
-      <message name="IDS_LANGUAGES_OFFER_TRANSLATE_SWITCH" desc="Appears next to the 'offer to translate' switch that controls whether or not Vanadium will display the Google Translate UI on web pages that are not in the user's preferred language(s).">
-        Offer to translate pages in other languages
-      </message>
-      <message name="IDS_LANGUAGES_SEND_TRANSLATE_SWITCH" desc="Appears next to the switch controlling whether or not Vanadium will offer to translate pages in other languages.  When enabled the Google Translate UI will be displayed on web pages that are not in the user's preferred language(s).">
-        Offer to send pages in other languages to Google Translate
-      </message>
+      <!--<message name="IDS_LANGUAGES_OFFER_TRANSLATE_SWITCH" desc="Appears next to the 'offer to translate' switch that controls whether or not Vanadium will display the Google Translate UI on web pages that are not in the user's preferred language(s).">-->
+        <!--Offer to translate pages in other languages-->
+      <!--</message>-->
+      <!--<message name="IDS_LANGUAGES_SEND_TRANSLATE_SWITCH" desc="Appears next to the switch controlling whether or not Vanadium will offer to translate pages in other languages.  When enabled the Google Translate UI will be displayed on web pages that are not in the user's preferred language(s).">-->
+        <!--Offer to send pages in other languages to Google Translate-->
+      <!--</message>-->
       <message name="IDS_LANGUAGES_ITEM_OPTION_OFFER_TO_TRANSLATE" desc="Option in language item menu. User can click the 'Offer to translate' option to toggle whether they want Vanadium to translate pages in this language. [CHAR-LIMIT=32]">
         Offer to translate
       </message>
-- 
2.31.1

