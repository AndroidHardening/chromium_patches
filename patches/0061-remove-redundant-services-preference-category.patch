From 0690bfdd06f00958b5ca232feb7631f793e24f58 Mon Sep 17 00:00:00 2001
From: Daniel Micay <danielmicay@gmail.com>
Date: Sat, 3 Aug 2019 00:34:43 -0400
Subject: [PATCH 61/73] remove redundant services preference category

---
 .../res/xml/sync_and_services_preferences.xml |  8 ++---
 .../settings/SyncAndServicesSettings.java     | 30 +++++++++----------
 .../strings/android_chrome_strings.grd        |  6 ++--
 3 files changed, 22 insertions(+), 22 deletions(-)

diff --git a/chrome/android/java/res/xml/sync_and_services_preferences.xml b/chrome/android/java/res/xml/sync_and_services_preferences.xml
index ad143c162b63..482d7ea6a92d 100644
--- a/chrome/android/java/res/xml/sync_and_services_preferences.xml
+++ b/chrome/android/java/res/xml/sync_and_services_preferences.xml
@@ -42,9 +42,9 @@
             <!--android:fragment="org.chromium.chrome.browser.sync.settings.ManageSyncSettings"/>-->
     <!--</PreferenceCategory>-->
 
-    <PreferenceCategory
-        android:key="services_category"
-        android:title="@string/services_category_title">
+    <!--<PreferenceCategory-->
+        <!--android:key="services_category"-->
+        <!--android:title="@string/services_category_title">-->
 
         <!-- Only shown when metrics-settings-android flag is on. -->
         <org.chromium.components.browser_ui.settings.ChromeBasePreference
@@ -101,5 +101,5 @@
             android:key="contextual_search"
             android:title="@string/contextual_search_title"
             android:fragment="org.chromium.chrome.browser.contextualsearch.ContextualSearchPreferenceFragment"/>
-    </PreferenceCategory>
+    <!--</PreferenceCategory>-->
 </PreferenceScreen>
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/sync/settings/SyncAndServicesSettings.java b/chrome/android/java/src/org/chromium/chrome/browser/sync/settings/SyncAndServicesSettings.java
index 4db5b207c824..caaa0810b67a 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/sync/settings/SyncAndServicesSettings.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/sync/settings/SyncAndServicesSettings.java
@@ -101,7 +101,7 @@ public class SyncAndServicesSettings extends PreferenceFragmentCompat
     public static final String PREF_SYNC_REQUESTED = "sync_requested";
     private static final String PREF_MANAGE_SYNC = "manage_sync";
 
-    private static final String PREF_SERVICES_CATEGORY = "services_category";
+    //private static final String PREF_SERVICES_CATEGORY = "services_category";
     private static final String PREF_SEARCH_SUGGESTIONS = "search_suggestions";
     private static final String PREF_NAVIGATION_ERROR = "navigation_error";
     @VisibleForTesting
@@ -207,13 +207,13 @@ public class SyncAndServicesSettings extends PreferenceFragmentCompat
         mSearchSuggestions.setOnPreferenceChangeListener(this);
         mSearchSuggestions.setManagedPreferenceDelegate(mManagedPreferenceDelegate);
 
-        PreferenceCategory servicesCategory =
-                (PreferenceCategory) findPreference(PREF_SERVICES_CATEGORY);
+        //PreferenceCategory servicesCategory =
+                //(PreferenceCategory) findPreference(PREF_SERVICES_CATEGORY);
 
         mNavigationError = (ChromeSwitchPreference) findPreference(PREF_NAVIGATION_ERROR);
         //mNavigationError.setOnPreferenceChangeListener(this);
         //mNavigationError.setManagedPreferenceDelegate(mManagedPreferenceDelegate);
-        removePreference(servicesCategory, mNavigationError);
+        getPreferenceScreen().removePreference(mNavigationError);
         mNavigationError = null;
 
         // If Safe Browsing section UI is enabled, Safe Browsing related preferences will be moved
@@ -221,9 +221,9 @@ public class SyncAndServicesSettings extends PreferenceFragmentCompat
         mIsSafeBrowsingPreferenceRemoved =
                 ChromeFeatureList.isEnabled(ChromeFeatureList.SAFE_BROWSING_SECTION_UI);
         if (mIsSafeBrowsingPreferenceRemoved) {
-            removePreference(servicesCategory, findPreference(PREF_SAFE_BROWSING));
-            removePreference(servicesCategory, findPreference(PREF_PASSWORD_LEAK_DETECTION));
-            removePreference(servicesCategory, findPreference(PREF_SAFE_BROWSING_SCOUT_REPORTING));
+            getPreferenceScreen().removePreference(findPreference(PREF_SAFE_BROWSING));
+            getPreferenceScreen().removePreference(findPreference(PREF_PASSWORD_LEAK_DETECTION));
+            getPreferenceScreen().removePreference(findPreference(PREF_SAFE_BROWSING_SCOUT_REPORTING));
             mSafeBrowsing = null;
             mPasswordLeakDetection = null;
             mSafeBrowsingReporting = null;
@@ -236,34 +236,34 @@ public class SyncAndServicesSettings extends PreferenceFragmentCompat
                     (ChromeSwitchPreference) findPreference(PREF_PASSWORD_LEAK_DETECTION);
             //mPasswordLeakDetection.setOnPreferenceChangeListener(this);
             //mPasswordLeakDetection.setManagedPreferenceDelegate(mManagedPreferenceDelegate);
-            removePreference(servicesCategory, mPasswordLeakDetection);
+            getPreferenceScreen().removePreference(mPasswordLeakDetection);
             mPasswordLeakDetection = null;
 
             mSafeBrowsingReporting =
                     (ChromeSwitchPreference) findPreference(PREF_SAFE_BROWSING_SCOUT_REPORTING);
             //mSafeBrowsingReporting.setOnPreferenceChangeListener(this);
             //mSafeBrowsingReporting.setManagedPreferenceDelegate(mManagedPreferenceDelegate);
-            removePreference(servicesCategory, mSafeBrowsingReporting);
+            getPreferenceScreen().removePreference(mSafeBrowsingReporting);
             mSafeBrowsingReporting = null;
         }
 
         // If the metrics-settings-android flag is not enabled, remove the corresponding element.
         if (!ChromeFeatureList.isEnabled(ChromeFeatureList.METRICS_SETTINGS_ANDROID)) {
-            removePreference(servicesCategory, findPreference(PREF_METRICS_SETTINGS));
+            getPreferenceScreen().removePreference(findPreference(PREF_METRICS_SETTINGS));
         }
 
         mUsageAndCrashReporting =
                 (ChromeSwitchPreference) findPreference(PREF_USAGE_AND_CRASH_REPORTING);
         //mUsageAndCrashReporting.setOnPreferenceChangeListener(this);
         //mUsageAndCrashReporting.setManagedPreferenceDelegate(mManagedPreferenceDelegate);
-        removePreference(servicesCategory, mUsageAndCrashReporting);
+        getPreferenceScreen().removePreference(mUsageAndCrashReporting);
         mUsageAndCrashReporting = null;
 
         mUrlKeyedAnonymizedData =
                 (ChromeSwitchPreference) findPreference(PREF_URL_KEYED_ANONYMIZED_DATA);
         //mUrlKeyedAnonymizedData.setOnPreferenceChangeListener(this);
         //mUrlKeyedAnonymizedData.setManagedPreferenceDelegate(mManagedPreferenceDelegate);
-        removePreference(servicesCategory, mUrlKeyedAnonymizedData);
+        getPreferenceScreen().removePreference(mUrlKeyedAnonymizedData);
         mUrlKeyedAnonymizedData = null;
 
         mAutofillAssistant = (ChromeSwitchPreference) findPreference(PREF_AUTOFILL_ASSISTANT);
@@ -272,20 +272,20 @@ public class SyncAndServicesSettings extends PreferenceFragmentCompat
         // enabled, then the subsection should show.
         if (ChromeFeatureList.isEnabled(ChromeFeatureList.AUTOFILL_ASSISTANT_PROACTIVE_HELP)
                 || ChromeFeatureList.isEnabled(ChromeFeatureList.OMNIBOX_ASSISTANT_VOICE_SEARCH)) {
-            removePreference(servicesCategory, mAutofillAssistant);
+            getPreferenceScreen().removePreference(mAutofillAssistant);
             mAutofillAssistant = null;
             autofillAssistantSubsection.setVisible(true);
         } else if (shouldShowAutofillAssistantPreference()) {
             mAutofillAssistant.setOnPreferenceChangeListener(this);
             mAutofillAssistant.setManagedPreferenceDelegate(mManagedPreferenceDelegate);
         } else {
-            removePreference(servicesCategory, mAutofillAssistant);
+            getPreferenceScreen().removePreference(mAutofillAssistant);
             mAutofillAssistant = null;
         }
 
         mContextualSearch = findPreference(PREF_CONTEXTUAL_SEARCH);
         if (!ContextualSearchFieldTrial.isEnabled()) {
-            removePreference(servicesCategory, mContextualSearch);
+            getPreferenceScreen().removePreference(mContextualSearch);
             mContextualSearch = null;
         }
 
diff --git a/chrome/browser/ui/android/strings/android_chrome_strings.grd b/chrome/browser/ui/android/strings/android_chrome_strings.grd
index eccd241dc791..ebf1744c11bd 100644
--- a/chrome/browser/ui/android/strings/android_chrome_strings.grd
+++ b/chrome/browser/ui/android/strings/android_chrome_strings.grd
@@ -318,9 +318,9 @@ CHAR-LIMIT guidelines:
       <message name="IDS_MANAGE_SYNC_TITLE" desc="Title for the preference row that opens the screen that allows configuring separate data types. Displayed in 'Sync and Google services' screen.">
         Manage sync
       </message>
-      <message name="IDS_SERVICES_CATEGORY_TITLE" desc="Title for the group of preferences that control non-personalized Google services. This group contains preferences for data that is not tied to user's Google Account.">
-        Other Google services
-      </message>
+      <!--<message name="IDS_SERVICES_CATEGORY_TITLE" desc="Title for the group of preferences that control non-personalized Google services. This group contains preferences for data that is not tied to user's Google Account.">-->
+        <!--Other Google services-->
+      <!--</message>-->
       <message name="IDS_PREFS_GOOGLE_SERVICES" desc="Title for the group of preferences that control non-personalized Google services. This group contains preferences for data that is not tied to user's Google Account. [CHAR-LIMIT=40]">
         Google services
       </message>
-- 
2.30.1

