From d088d4c989b4828e794e8f5e662fa6c4618ac51a Mon Sep 17 00:00:00 2001
From: inthewaves <inthewaves@pm.me>
Date: Tue, 6 Oct 2020 14:30:57 -0700
Subject: [PATCH 64/76] remove more sync preferences

---
 .../android/java/res/xml/main_preferences.xml |  28 ++---
 .../chrome/browser/settings/MainSettings.java | 106 +++++++++---------
 2 files changed, 67 insertions(+), 67 deletions(-)

diff --git a/chrome/android/java/res/xml/main_preferences.xml b/chrome/android/java/res/xml/main_preferences.xml
index fb12dbdd6e82..2a921e9fa367 100644
--- a/chrome/android/java/res/xml/main_preferences.xml
+++ b/chrome/android/java/res/xml/main_preferences.xml
@@ -31,20 +31,20 @@
         android:fragment="org.chromium.chrome.browser.sync.settings.SyncAndServicesSettings"/>
     <!-- manage_sync and google_services replace sync_and_services if MOBILE_IDENTITY_CONSISTENCY
          is enabled. -->
-    <org.chromium.components.browser_ui.settings.ChromeBasePreference
-        android:key="manage_sync"
-        android:order="5"
-        android:layout="@layout/account_management_account_row"
-        android:title="@string/sync_category_title"
-        app:isPreferenceVisible="false"/>
-    <org.chromium.components.browser_ui.settings.ChromeBasePreference
-        android:key="google_services"
-        android:order="6"
-        android:layout="@layout/account_management_account_row"
-        android:title="@string/prefs_google_services"
-        android:icon="@drawable/ic_google_services_48dp"
-        android:fragment="org.chromium.chrome.browser.sync.settings.GoogleServicesSettings"
-        app:isPreferenceVisible="false"/>
+    <!--<org.chromium.components.browser_ui.settings.ChromeBasePreference-->
+        <!--android:key="manage_sync"-->
+        <!--android:order="5"-->
+        <!--android:layout="@layout/account_management_account_row"-->
+        <!--android:title="@string/sync_category_title"-->
+        <!--app:isPreferenceVisible="false"/>-->
+    <!--<org.chromium.components.browser_ui.settings.ChromeBasePreference-->
+        <!--android:key="google_services"-->
+        <!--android:order="6"-->
+        <!--android:layout="@layout/account_management_account_row"-->
+        <!--android:title="@string/prefs_google_services"-->
+        <!--android:icon="@drawable/ic_google_services_48dp"-->
+        <!--android:fragment="org.chromium.chrome.browser.sync.settings.GoogleServicesSettings"-->
+        <!--app:isPreferenceVisible="false"/>-->
 
     <PreferenceCategory
         android:key="basics_section"
diff --git a/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java b/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java
index ec51207bbc5c..34e7e0d22351 100644
--- a/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java
+++ b/chrome/android/java/src/org/chromium/chrome/browser/settings/MainSettings.java
@@ -64,8 +64,8 @@ public class MainSettings extends PreferenceFragmentCompat
             "account_and_google_services_section";
     public static final String PREF_SIGN_IN = "sign_in";
     public static final String PREF_SYNC_AND_SERVICES = "sync_and_services";
-    public static final String PREF_MANAGE_SYNC = "manage_sync";
-    public static final String PREF_GOOGLE_SERVICES = "google_services";
+    //public static final String PREF_MANAGE_SYNC = "manage_sync";
+    //public static final String PREF_GOOGLE_SERVICES = "google_services";
     public static final String PREF_SEARCH_ENGINE = "search_engine";
     public static final String PREF_PASSWORDS = "passwords";
     public static final String PREF_HOMEPAGE = "homepage";
@@ -85,7 +85,7 @@ public class MainSettings extends PreferenceFragmentCompat
     private final Map<String, Preference> mAllPreferences = new HashMap<>();
     private SyncPromoPreference mSyncPromoPreference;
     private SignInPreference mSignInPreference;
-    private ChromeBasePreference mManageSync;
+    //private ChromeBasePreference mManageSync;
     private @Nullable PasswordCheck mPasswordCheck;
 
     public MainSettings() {
@@ -242,8 +242,8 @@ public class MainSettings extends PreferenceFragmentCompat
             getPreferenceScreen().removePreference(findPreference(PREF_SYNC_AND_SERVICES));
 
             findPreference(PREF_ACCOUNT_AND_GOOGLE_SERVICES_SECTION).setVisible(true);
-            mManageSync.setVisible(true);
-            findPreference(PREF_GOOGLE_SERVICES).setVisible(true);
+            //mManageSync.setVisible(true);
+            //findPreference(PREF_GOOGLE_SERVICES).setVisible(true);
         }
     }
 
@@ -259,7 +259,7 @@ public class MainSettings extends PreferenceFragmentCompat
         }
         mSyncPromoPreference = (SyncPromoPreference) mAllPreferences.get(PREF_SYNC_PROMO);
         mSignInPreference = (SignInPreference) mAllPreferences.get(PREF_SIGN_IN);
-        mManageSync = (ChromeBasePreference) findPreference(PREF_MANAGE_SYNC);
+        //mManageSync = (ChromeBasePreference) findPreference(PREF_MANAGE_SYNC);
     }
 
     private void setManagedPreferenceDelegateForPreference(String key) {
@@ -276,7 +276,7 @@ public class MainSettings extends PreferenceFragmentCompat
             removePreferenceIfPresent(PREF_SIGN_IN);
         }
 
-        updateSyncPreference();
+        //updateSyncPreference();
         updateSearchEnginePreference();
 
         Preference homepagePref = addPreferenceIfAbsent(PREF_HOMEPAGE);
@@ -310,51 +310,51 @@ public class MainSettings extends PreferenceFragmentCompat
         if (preference != null) getPreferenceScreen().removePreference(preference);
     }
 
-    private void updateSyncPreference() {
-        if (ChromeFeatureList.isEnabled(ChromeFeatureList.MOBILE_IDENTITY_CONSISTENCY)) {
-            updateManageSyncPreference();
-        } else {
-            updateSyncAndServicesPreference();
-        }
-    }
-
-    private void updateSyncAndServicesPreference() {
-        ChromeBasePreference preference = findPreference(PREF_SYNC_AND_SERVICES);
-        preference.setIcon(SyncSettingsUtils.getSyncStatusIcon(getActivity()));
-        preference.setSummary(SyncSettingsUtils.getSyncStatusSummary(getActivity()));
-    }
-
-    private void updateManageSyncPreference() {
-        String primaryAccountName = CoreAccountInfo.getEmailFrom(
-                IdentityServicesProvider.get()
-                        .getIdentityManager(Profile.getLastUsedRegularProfile())
-                        .getPrimaryAccountInfo(ConsentLevel.NOT_REQUIRED));
-        boolean showManageSync =
-                ChromeFeatureList.isEnabled(ChromeFeatureList.MOBILE_IDENTITY_CONSISTENCY)
-                && primaryAccountName != null;
-        mManageSync.setVisible(showManageSync);
-        if (!showManageSync) {
-            return;
-        }
-
-        boolean isSyncConsentAvailable =
-                IdentityServicesProvider.get()
-                        .getIdentityManager(Profile.getLastUsedRegularProfile())
-                        .getPrimaryAccountInfo(ConsentLevel.SYNC)
-                != null;
-        mManageSync.setIcon(SyncSettingsUtils.getSyncStatusIcon(getActivity()));
-        mManageSync.setSummary(SyncSettingsUtils.getSyncStatusSummary(getActivity()));
-        mManageSync.setOnPreferenceClickListener(pref -> {
-            if (isSyncConsentAvailable) {
-                SettingsLauncher settingsLauncher = new SettingsLauncherImpl();
-                settingsLauncher.launchSettingsActivity(getContext(), ManageSyncSettings.class);
-            } else {
-                SigninActivityLauncherImpl.get().launchActivityForPromoDefaultFlow(
-                        getContext(), SigninAccessPoint.SETTINGS, primaryAccountName);
-            }
-            return true;
-        });
-    }
+    //private void updateSyncPreference() {
+        //if (ChromeFeatureList.isEnabled(ChromeFeatureList.MOBILE_IDENTITY_CONSISTENCY)) {
+            //updateManageSyncPreference();
+        //} else {
+            //updateSyncAndServicesPreference();
+        //}
+    //}
+
+    //private void updateSyncAndServicesPreference() {
+        //ChromeBasePreference preference = findPreference(PREF_SYNC_AND_SERVICES);
+        //preference.setIcon(SyncSettingsUtils.getSyncStatusIcon(getActivity()));
+        //preference.setSummary(SyncSettingsUtils.getSyncStatusSummary(getActivity()));
+    //}
+
+    //private void updateManageSyncPreference() {
+        //String primaryAccountName = CoreAccountInfo.getEmailFrom(
+                //IdentityServicesProvider.get()
+                        //.getIdentityManager(Profile.getLastUsedRegularProfile())
+                        //.getPrimaryAccountInfo(ConsentLevel.NOT_REQUIRED));
+        //boolean showManageSync =
+                //ChromeFeatureList.isEnabled(ChromeFeatureList.MOBILE_IDENTITY_CONSISTENCY)
+                //&& primaryAccountName != null;
+        //mManageSync.setVisible(showManageSync);
+        //if (!showManageSync) {
+            //return;
+        //}
+
+        //boolean isSyncConsentAvailable =
+                //IdentityServicesProvider.get()
+                        //.getIdentityManager(Profile.getLastUsedRegularProfile())
+                        //.getPrimaryAccountInfo(ConsentLevel.SYNC)
+                //!= null;
+        //mManageSync.setIcon(SyncSettingsUtils.getSyncStatusIcon(getActivity()));
+        //mManageSync.setSummary(SyncSettingsUtils.getSyncStatusSummary(getActivity()));
+        //mManageSync.setOnPreferenceClickListener(pref -> {
+            //if (isSyncConsentAvailable) {
+                //SettingsLauncher settingsLauncher = new SettingsLauncherImpl();
+                //settingsLauncher.launchSettingsActivity(getContext(), ManageSyncSettings.class);
+            //} else {
+                //SigninActivityLauncherImpl.get().launchActivityForPromoDefaultFlow(
+                        //getContext(), SigninAccessPoint.SETTINGS, primaryAccountName);
+            //}
+            //return true;
+        //});
+    //}
 
     private void updateSearchEnginePreference() {
         if (!TemplateUrlServiceFactory.get().isLoaded()) {
@@ -424,7 +424,7 @@ public class MainSettings extends PreferenceFragmentCompat
 
     @Override
     public void syncStateChanged() {
-        updateSyncPreference();
+        //updateSyncPreference();
     }
 
     @VisibleForTesting
-- 
2.29.2

